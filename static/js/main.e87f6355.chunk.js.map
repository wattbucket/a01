{"version":3,"sources":["components/sections/Career/CareerItem.jsx","components/sections/Career/Career.jsx","graphql/queries.js","components/sections/Header/Header.jsx","components/Resume.jsx","App.js","serviceWorker.js","aws-exports.js","index.js"],"names":["CareerItem","item","this","props","react_default","a","createElement","className","position","dates","company","location","summary","accomplishments","length","map","itemm","i","key","competencies","Component","Career","dist","query","graphqlOperation","_ref","jobs","data","listJobs","items","id","Career_CareerItem","Header","person","getDetail","name","profession","certified","src","alt","width","citizenship","birthday","href","email","site","phone","github","stackoverflow","Resume","sections_Header_Header","sections_Career_Career","App","components_Resume","Boolean","window","hostname","match","awsmobile","aws_project_region","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_appsync_apiKey","aws_content_delivery_bucket","aws_content_delivery_bucket_region","aws_content_delivery_url","Amplify","configure","config","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e87f6355.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass CareerItem extends Component {\n  render() {\n    let item = this.props.item;\n    return (\n      <div className=\"jd\">\n        <div className=\"row\">\n          <div className=\"col-xs-6\">\n            <h4>\n              <b>{item.position}</b>\n            </h4>\n          </div>\n          <div className=\"col-xs-6 pull-right\">\n            <h5 className=\"pull-right\">\n              {item.dates}\n              <br />\n              {item.company} <i>({item.location})</i>\n            </h5>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-xs-12\">\n            <p>{item.summary}</p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-xs-12\">\n            {item.accomplishments.length > 0 ? (\n              <b>trabajos realizados: </b>\n            ) : null}\n            <ul>\n              {item.accomplishments.map((itemm, i) => (\n                <li key={i} >{itemm}</li>\n              ))}\n            </ul>\n            {item.competencies.length > 0 ? <b>Technical competencies: </b> : null}\n            {item.competencies.map((itemm, i) => (\n              <span key={i} className=\"badge\">{itemm}</span>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CareerItem;\n","import React, { Component } from \"react\";\nimport { graphqlOperation } from \"aws-amplify\";\nimport { Connect } from \"aws-amplify-react\";\nimport { listJobs } from \"../../../graphql/queries\";\nimport CareerItem from \"./CareerItem\";\n\nclass Career extends Component {\n  render() {\n    return (\n      <Connect query={graphqlOperation(listJobs)}>\n        {({ data: { listJobs: jobs } }) => {\n          if (!jobs || !jobs.items) {\n            return null;\n          }\n          return (\n            <div className=\"row section\">\n              <div className=\"col-xs-3\"><h2>carrera</h2></div>\n              <div className=\"col-xs-9\">\n                {jobs.items.map(item => (\n                  <div key={item.id}>\n                    <CareerItem item={item} />\n                    <hr/>\n                  </div>\n                ))}\n              </div>\n            </div>\n          );\n        }}\n      </Connect>\n    );\n  }\n}\n\nexport default Career;\n","// eslint-disable\n// this is an auto generated file. This will be overwritten\n\nexport const getJob = `query GetJob($id: ID!) {\n  getJob(id: $id) {\n    id\n    position\n    company\n    location\n    dates\n    summary\n    accomplishments\n    competencies\n  }\n}\n`;\nexport const listJobs = `query ListJobs($filter: ModelJobFilterInput, $limit: Int, $nextToken: String) {\n  listJobs(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      position\n      company\n      location\n      dates\n      summary\n      accomplishments\n      competencies\n    }\n    nextToken\n  }\n}\n`;\nexport const getDetail = `query GetDetail($id: ID!) {\n  getDetail(id: $id) {\n    id\n    name\n    profession\n    location\n    certified\n    citizenship\n    birthday\n    email\n    site\n    phone\n    github\n    stackoverflow\n  }\n}\n`;\nexport const listDetails = `query ListDetails(\n  $filter: ModelDetailFilterInput\n  $limit: Int\n  $nextToken: String\n) {\n  listDetails(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      name\n      profession\n      location\n      certified\n      citizenship\n      birthday\n      email\n      site\n      phone\n      github\n      stackoverflow\n    }\n    nextToken\n  }\n}\n`;\n","import React, { Component } from \"react\";\nimport { graphqlOperation } from \"aws-amplify\";\nimport { Connect } from \"aws-amplify-react\";\nimport { getDetail } from \"../../../graphql/queries\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <Connect query={graphqlOperation(getDetail, { id: 1 })}>\n        {({ data: { getDetail: person } }) => {\n          if (!person) {\n            return null;\n          }\n          return (\n            <div className=\"row header\">\n              <div className=\"col-xs-9\">\n                <h1 className=\"name\">{person.name}</h1>\n                <h4 className=\"profession\">{person.profession}</h4>\n                { person.certified\n                  ? <img src=\"/img/aws-logo.png\" alt=\"AWS\" width=\"200\" />\n                  : null\n                }\n              </div>\n\n              <div className=\"col-xs-3\">\n                <ul className=\"list-unstyled\">\n                  <li>\n                    <i className=\"fa fa-map-marker\" /> {person.location}\n                  </li>\n                  <li>\n                    <i className=\"fa fa-flag-o\" /> {person.citizenship}\n                  </li>\n                  <li>\n                    <i className=\"fa fa-birthday-cake\" /> {person.birthday}\n                  </li>\n                  <li>\n                    <i className=\"fa fa-envelope-o\" />\n                    <a href={\"mailto:\" + person.email}> {person.email}</a>\n                  </li>\n                  <li>\n                    <i className=\"fa fa-laptop\" />\n                    <a href={\"https://\" + person.site}> nathanglover.com</a>\n                  </li>\n                  <li>\n                    <i className=\"fa fa-phone\" /> {person.phone}\n                  </li>\n                  <li>\n                    <i className=\"fa fa-github\" />\n                    <a href={\"https://github.com/\" + person.github}> {person.github}</a>\n                  </li>\n                  <li>\n                    <i className=\"fa fa-stack-overflow\" />\n                    <a href={\"https://stackoverflow.com/story/\" + person.stackoverflow}> {person.stackoverflow}</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          );\n        }}\n      </Connect>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Career from \"./sections/Career/Career\";\nimport Header from \"./sections/Header/Header\";\n\nclass Resume extends Component {\n render() {\n   return (\n     <div className=\"container\">\n        <Header />\n        <Career/>\n     </div>\n   );\n }\n}\n\nexport default Resume;\n","import React, { Component } from \"react\";\nimport Resume from \"./components/Resume\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Resume />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"eu-west-1\",\n    \"aws_appsync_graphqlEndpoint\": \"https://mmviebrqtrfqherkzecvkwdu3m.appsync-api.eu-west-1.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"eu-west-1\",\n    \"aws_appsync_authenticationType\": \"API_KEY\",\n    \"aws_appsync_apiKey\": \"da2-6dkglhzeg5cjpemeheoqbrljni\",\n    \"aws_content_delivery_bucket\": \"aws-amplify-resume-20190714211055-hostingbucket-ampresume\",\n    \"aws_content_delivery_bucket_region\": \"eu-west-1\",\n    \"aws_content_delivery_url\": \"https://d2m76h842da4b2.cloudfront.net\"\n};\n\n\nexport default awsmobile;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './cv.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Import the Amplify Libraries and config\nimport Amplify from '@aws-amplify/core'\nimport config from './aws-exports'\nAmplify.configure(config)\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}